tr <- phylo.toBackbone(tree, trans)
plot(tr)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .1
plot(tr2)
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
plot(tr2)
tr2 <- as.phylo(tr2)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
class(tr2)
depth <- rep(.01, 16)
tip.label <- tr1$tip.label
clade.label <- tr1$tip.label
trans<-data.frame(tip.label,clade.label,N,depth)
tr2 <- phylo.toBackbone(tr2, trans)
plot(tr2)
tr2
tr2$tip.clade
plot(tr2)
plot.backbonephylo(tr2)
plot.backbonePhylo(tr2)
class(tr2)
class(tr2) <- "backbonePhylo"
plot(tr2)
tree<-phytools:::lambdaTree(pbtree(n=10),lambda=0.5)
## create a translation table
## leaving a couple of single-taxon clades for fun
tip.label<-sample(tree$tip.label,8)
clade.label<-LETTERS[1:8]
N<-ceiling(runif(n=8,min=1,max=20))
## set crown node depth to 1/2 the maximum depth
depth<-sapply(tip.label,function(x,y)
0.5*y$edge.length[which(tree$edge[,2]==
which(y$tip.label==x))],y=tree)
trans<-data.frame(tip.label,clade.label,N,depth)
tr <- phylo.toBackbone(tree, trans)
tr
tr$tip.clade
tr$tip.clade->foo
plot(tr)
plot(tr, col="red")
rep("black", 6)
plot(tr, col=c(rep("red", 4),
rep("black", 6)))
library(ape)
library(dplyr)
library(phytools)
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
class(tr2)
depth <- rep(.01, 16)
tip.label <- tr1$tip.label
clade.label <- tr1$tip.label
trans<-data.frame(tip.label,clade.label,N,depth)
tr2 <- phylo.toBackbone(tr2, trans)
plot(tr2)
foo2 <- tr2$tip.clade
foo2[[1]]
foo[[1]]
foo[[2]]
foo[[3]]
foo[[4]]
foo2[[4]]
foo2
tr2$node.label
tr2$node.label->foobar
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr1
tr2 <- multi2di(tr1)
tr2
tr2$edge.length[tr2$edge.length==0] <- .05
plot(tr2)
# Stuff from Liam's help and blog
## first create our backbone tree with
## random subtree diversities
tree<-phytools:::lambdaTree(pbtree(n=10),lambda=0.5)
tree
help("multi2di")
tr2$edge.length
write.tree(tr2, "test.tree")
tr3 read.tree("test.tree")
tr3 <- read.tree("test.tree")
tr3
nodelabels()
plot(tree)
nodelabels()
# Stuff from Liam's help and blog
## first create our backbone tree with
## random subtree diversities
tree<-phytools:::lambdaTree(pbtree(n=10),lambda=0.5)
plot(tree)
nodelabels()
# make and thin data to get this working
# we will used included carnivora data
data(carnivora)
dat <- carnivora
# slimming down the data
dat$Genus <- as.character(dat$Genus)
counts <- as.data.frame(table(dat$Genus))
dat <- dat[dat$Genus %in% counts[counts$Freq!=1,]$Var1,]
# recording the species numbers
N <- counts[counts$Freq>1,2]
dat_unique <- dat %>% distinct(Genus, .keep_all = TRUE)
frm <- ~SuperFamily/Family/Genus
dat_unique$Genus <- as.factor(dat_unique$Genus)
tr1 <- as.phylo(frm, data = dat_unique, collapse=FALSE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
tr2$edge.length[tr2$edge.length==0] <- .15
plot(tr2)
nodelabels()
tr1 <- as.phylo(frm, data = dat_unique, collapse=TRUE)
tr1$edge.length <- rep(1, nrow(tr1$edge))
plot(tr1)
tr2 <- multi2di(tr1)
plot(tr2)
tr2$edge.length[tr2$edge.length==0] <- .15
plot(tr2)
nodelabels()
tr2
help("as.phylo")
regexpr
45-14
seq(from=1, by=8, length.out=1000)
seq(from=8001, by=8, length.out=1000)
seq(from=24001, by=8, length.out=1000)
setwd("~/Desktop/github/comptraits/scripts")
dat.epi <- read.csv("../results/sim.results-epistatic.csv")
elar1 <- "Aa"
elar2 <- "AaAa"
dat.epi$trait
dat.epi$trait == "Aa"
which(dat.epi$trait == "Aa")
dat.epi$trait[prelimhits + 1]
prelimhits <- which(dat.epi$trait == "Aa")
dat.epi$trait[prelimhits + 1]
prelimhits <- which(dat.epi$trait == elar1)
which(dat.epi$trait[prelimhits + 1] == elar2)
elar1hits <- which(dat.epi$trait == elar1)
elar2hits <- which(dat.epi$trait == elar2)
elar2hits <- which(dat.epi$trait == elar2) - 1
intersect(elar1hits, elar2hits)
res <- read.csv("../results/sim.results-epistatic.csv")
elar1 <- "Aa"
elar2 <- "AaAa"
elar1hits <- which(res$trait == elar1)
elar2hits <- which(res$trait == elar2) - 1
starts <- intersect(elar1hits, elar2hits)
sum.res <- as.data.frame(matrix(0,6,6))
colnames(sum.res) <- c("Aa","Ad","AaAa","AaAd","AdAd", "NA")
row.names(sum.res) <- c("1 / 2", "2 / 1", "1 * 2", "1 + 2",
"1 - 2", "2 - 1")
i <- j <- 1
sum.res[, j]
res[(i + 2):(i + 7), (j + 2)]
View(res)
!is.na(res[(i + 2):(i + 7), (j + 2)])
as.numeric(!is.na(res[(i + 2):(i + 7), (j + 2)]))
sum.res[, j] + as.numeric(!is.na(res[(i + 2):(i + 7), (j + 2)]))
for(j in 1:5){
sum.res[, j] <- sum.res[, j] + as.numeric(!is.na(res[(i + 2):(i + 7), (j + 2)]))
}
View(sum.res)
View(res)
View(sum.res)
counter <- 1
for(k in (i + 2):(i + 7)){
if(sum(is.na(res[k, 3:7])) == 5){
sum.res[counter, 6] <- sum.res[counter, 6] + 1
}
counter <- counter + 1
}
sum.res <- as.data.frame(matrix(0,6,6))
colnames(sum.res) <- c("Aa","Ad","AaAa","AaAd","AdAd", "NA")
row.names(sum.res) <- c("1 / 2", "2 / 1", "1 * 2", "1 + 2",
"1 - 2", "2 - 1")
i <- 1
for(j in 1:5){
sum.res[, j] <- sum.res[, j] + as.numeric(!is.na(res[(i + 2):(i + 7), (j + 2)]))
}
counter <- 1
for(k in (i + 2):(i + 7)){
if(sum(is.na(res[k, 3:7])) == 5){
sum.res[counter, 6] <- sum.res[counter, 6] + 1
}
counter <- counter + 1
}
View(sum.res)
for(i in starts){
for(j in 1:5){
sum.res[, j] <- sum.res[, j] + as.numeric(!is.na(res[(i + 2):(i + 7), (j + 2)]))
}
counter <- 1
for(k in (i + 2):(i + 7)){
if(sum(is.na(res[k, 3:7])) == 5){
sum.res[counter, 6] <- sum.res[counter, 6] + 1
}
counter <- counter + 1
}
}
View(sum.res)
foo <- sum.res/length(starts)
View(foo)
GetTable(res, elar1, elar2){
GetTable <- function(res, elar1, elar2){
elar1hits <- which(res$trait == elar1)
elar2hits <- which(res$trait == elar2) - 1
starts <- intersect(elar1hits, elar2hits)
sum.res <- as.data.frame(matrix(0,6,6))
colnames(sum.res) <- c("Aa","Ad","AaAa","AaAd","AdAd", "NA")
row.names(sum.res) <- c("1 / 2", "2 / 1", "1 * 2", "1 + 2",
"1 - 2", "2 - 1")
for(i in starts){
for(j in 1:5){
sum.res[, j] <- sum.res[, j] + as.numeric(!is.na(res[(i + 2):(i + 7), (j + 2)]))
}
counter <- 1
for(k in (i + 2):(i + 7)){
if(sum(is.na(res[k, 3:7])) == 5){
sum.res[counter, 6] <- sum.res[counter, 6] + 1
}
counter <- counter + 1
}
}
sum.res <- sum.res/length(starts)
return(sum.res)
}
res <- read.csv("../results/sim.results-epistatic.csv")
elar1 <- "Aa"
elar2 <- "AaAa"
a.e.res <- GetTable(res, elar1, elar2)
View(a.e.res)
a.e.res <- GetTable(res, elar1="Ad", elar2="AaAa")
a.e.res <- GetTable(res, elar1, elar2)
d.e.res <- GetTable(res, elar1="Ad", elar2="AaAa")
View(d.e.res)
View(a.e.res)
e.e.res1 <- GetTable(res, elar1="AdAd", elar2="Aa")
View(e.e.res1)
e.e.res1 <- GetTable(res, elar1="AdAd", elar2="AaAa")
View(e.e.res1)
GetTable <- function(res, elar1, elar2){
elar1hits <- which(res$trait == elar1)
elar2hits <- which(res$trait == elar2) - 1
starts <- intersect(elar1hits, elar2hits)
sum.res <- as.data.frame(matrix(0,6,6))
colnames(sum.res) <- c("Aa","Ad","AaAa","AaAd","AdAd", "NA")
row.names(sum.res) <- c("1 / 2", "2 / 1", "1 * 2", "1 + 2",
"1 - 2", "2 - 1")
for(i in starts){
for(j in 1:5){
sum.res[, j] <- sum.res[, j] + as.numeric(!is.na(res[(i + 2):(i + 7), (j + 2)]))
}
counter <- 1
for(k in (i + 2):(i + 7)){
if(sum(is.na(res[k, 3:7])) == 5){
sum.res[counter, 6] <- sum.res[counter, 6] + 1
}
counter <- counter + 1
}
}
sum.res <- sum.res/length(starts)
print(paste(length(starts), "datsets match your request"))
return(sum.res)
}
a.e.res <- GetTable(res, elar1, elar2)
d.e.res <- GetTable(res, elar1="Ad", elar2="AaAa")
e.e.res1 <- GetTable(res, elar1="AdAd", elar2="AaAa")
res <- read.csv("../results/sim.results.csv")
elar1 <- "Aa"
elar2 <- "Aa"
a.a.res <- GetTable(res, elar1, elar2)
View(res)
View(a.a.res)
View(res)
