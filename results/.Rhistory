dat <- dat[, c(8, 1:7)]
View(dat)
#remove "total" column
succ.matrix <- dat[,1:7]
View(succ.matrix)
# Get row and column names
row_names <- rownames(succ.matrix)
col_names <- colnames(succ.matrix)
# Melt the table to long format
library(reshape2)
succ.matrix.long <- melt(succ.matrix)
# Scale the values to range from 0 to 1
succ.matrix.long$value_scaled <- scale(succ.matrix.long$value)
# Create the plot
ggplot(succ.matrix.long, aes(x = col_names, y = row_names, fill = value_scaled)) +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
geom_tile() +
scale_fill_viridis(name = "value_scaled", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(x = col_names, y = row_names, fill = value_scaled)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "value_scaled", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(succ.matrix.long)
succ.matrix.long <- melt(succ.matrix)
View(succ.matrix.long)
# Create the plot
ggplot(succ.matrix.long, aes(x = col_names, y = row_names, fill = value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "value_scaled", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(succ.matrix.long)
View(succ.matrix.long)
# Create the plot
ggplot(succ.matrix.long, aes(x = col_names, y = row_names, fill = value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
succ.matrix.long <- melt(succ.matrix)
# Create the plot
ggplot(succ.matrix.long, aes(x = col_names, y = row_names, fill = value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Melt the table to long format
library(reshape2)
succ.matrix.long <- expand.grid(Row = rownames(succ.matrix.long),
Column = colnames(succ.matrix.long))
succ.matrix.long$Value <- as.vector(succ.matrix.long)
# Create the plot
ggplot(succ.matrix.long, aes(x = Column, y = Row, fill = Value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(succ.matrix.long)
##### colored matrix for 2 known elements- a & a #####
data <- read.csv("../results/tabs.from.parsing.results/a.a.tab.csv", header = TRUE, row.names = 1)
# Convert the data frame to a matrix
data_matrix <- as.matrix(data)
precision <- 3
# Round the values to the desired precision
rounded_matrix <- round(data_matrix, digits = precision)
View(data)
View(succ.matrix)
library(ggplot2)
library(viridis)
#Read in succ.matrix.csv
dat <- read.csv("succ.matrix.csv")
#combine columns 1 & 2
combined_column <- paste(dat$first.element, dat$second.element, sep = " & ")
# Name the combined column
dat$'Elemental Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemntal architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
succ.matrix <- dat[,1:7]
data_matrix <- as.matrix(succ.matrix)
View(succ.matrix)
setwd("C:/Users/Crystal Sanders/Desktop/comptraits/results")
setwd("C:/Users/Crystal Sanders/Desktop/comptraits/results")
library(ggplot2)
library(viridis)
library(ggplot2)
library(viridis)
#Read in succ.matrix.csv
dat <- read.csv("succ.matrix.csv")
#combine columns 1 & 2
combined_column <- paste(dat$first.element, dat$second.element, sep = " & ")
# Name the combined column
dat$'Elemental Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemntal architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
succ.matrix <- dat[,1:7]
View(succ.matrix)
data_matrix <- as.matrix(succ.matrix)
View(data_matrix)
library(ggplot2)
library(viridis)
#Read in succ.matrix.csv
dat <- read.csv("succ.matrix.csv")
#combine columns 1 & 2
combined_column <- paste(dat$first.element, dat$second.element, sep = " & ")
# Name the combined column
dat$'Elemental Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemntal architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
succ.matrix <- dat[,1:7]
View(succ.matrix)
# Get row and column names
row_names <- rownames(succ.matrix)
col_names <- colnames(succ.matrix)
# Melt the table to long format
library(reshape2)
succ.matrix.long <- melt(succ.matrix)
View(succ.matrix.long)
# Create the plot
ggplot(succ.matrix.long, aes(x = Column, y = Row, fill = Value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(dat)
#change column names to display correct functions
colnames(dat) <- c("first element","second element","1/2","2/1","1*2","1+2","1-2","2-1","total")
setwd("C:/Users/Crystal Sanders/Desktop/comptraits/results")
library(ggplot2)
library(viridis)
#Read in succ.matrix.csv
dat <- read.csv("succ.matrix.csv")
#change column names to display correct functions
colnames(dat) <- c("first element","second element","1/2","2/1","1*2","1+2","1-2","2-1","total")
View(dat)
#combine columns 1 & 2
combined_column <- paste(dat$first.element, dat$second.element, sep = " & ")
View(dat)
# Name the combined column
dat$'Elemental Architectures' <- combined_column
View(dat)
#change column names to display correct functions
colnames(dat) <- c("first element","second element","1/2","2/1","1*2","1+2","1-2","2-1","total")
#combine columns 1 & 2
combined_column <- paste(dat$"first element", dat$"second element", sep = " & ")
# Name the combined column
dat$'Elemental Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemntal architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
succ.matrix <- dat[,1:7]
View(succ.matrix)
# Get row and column names
row_names <- rownames(succ.matrix)
col_names <- colnames(succ.matrix)
# Melt the table to long format
library(reshape2)
succ.matrix.long <- melt(succ.matrix)
View(succ.matrix.long)
ggplot(data = as.data.frame(succ.matrix.long), aes(x = factor(colnames(succ.matrix.long)), y = factor(rownames(succ.matrix.long)), fill = as.numeric(as.matrix(succ.matrix.long)))) +
geom_tile() +
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Column Names", y = "Row Names", title = "Colored Matrix") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(col_names, row_names, fill = value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
library(ggplot2)
library(viridis)
#Read in succ.matrix.csv
dat <- read.csv("succ.matrix.csv")
#change column names to display correct functions
colnames(dat) <- c("first element","second element","1/2","2/1","1*2","1+2","1-2","2-1","total")
#combine columns 1 & 2
combined_column <- paste(dat$"first element", dat$"second element", sep = " & ")
# Name the combined column
dat$'Elemental Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemntal architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
succ.matrix <- dat[,1:7]
# Get row and column names
row_names <- rownames(succ.matrix)
col_names <- colnames(succ.matrix)
# Melt the table to long format
library(reshape2)
succ.matrix.long <- melt(succ.matrix)
# Create the plot
ggplot(succ.matrix.long, aes(col_names, row_names, fill = value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
setwd("C:/Users/Crystal Sanders/Desktop/comptraits/results")
library(ggplot2)
library(viridis)
#Read in succ.matrix.csv
dat <- read.csv("succ.matrix.csv")
#change column names to display correct functions
colnames(dat) <- c("first element","second element","1/2","2/1","1*2","1+2","1-2","2-1","total")
#combine columns 1 & 2
combined_column <- paste(dat$"first element", dat$"second element", sep = " & ")
# Name the combined column
dat$'Elemental Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemntal architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
succ.matrix <- dat[,1:7]
# Get row and column names
row_names <- rownames(succ.matrix)
col_names <- colnames(succ.matrix)
# Melt the table to long format
library(reshape2)
succ.matrix.long <- melt(succ.matrix)
# Create the plot
ggplot(succ.matrix.long, aes(col_names, row_names, fill = value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(succ.matrix.long)
# Create the plot
ggplot(succ.matrix.long, aes(Elemental Architecture, variable, fill = value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes("Elemental Architecture", variable, fill = value)) +
geom_tile() +
geom_text(aes(label = value_scaled), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes("Elemental Architecture", variable, fill = value)) +
geom_tile() +
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(variable, "Elemental Architecture", fill = value)) +
geom_tile() +
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architecture, fill = value)) +
geom_tile() +
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
#Read in succ.matrix.csv
dat <- read.csv("succ.matrix.csv")
#change column names to display correct functions
colnames(dat) <- c("first element","second element","1/2","2/1","1*2","1+2","1-2","2-1","total")
#combine columns 1 & 2
combined_column <- paste(dat$"first element", dat$"second element", sep = " & ")
# Name the combined column
dat$'Elemental.Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemntal architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
succ.matrix <- dat[,1:7]
# Get row and column names
row_names <- rownames(succ.matrix)
col_names <- colnames(succ.matrix)
# Melt the table to long format
library(reshape2)
succ.matrix.long <- melt(succ.matrix)
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architecture, fill = value)) +
geom_tile() +
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(succ.matrix.long)
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Elemental Architectures", y = "Functions", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures", title = "Success") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures", title = "Success") +
theme(plot.title = element_text(hjust = 0.5))+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures", title = "Success") +
theme(plot.title = element_text(hjust = 0.1))+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures", title = "Success") +
theme(plot.title = element_text(hjust = 0.5))+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures", title = "Success") +
theme(plot.title = element_text(hjust = 0.5))+
theme_minimal()
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures", title = "Success") +
theme(plot.title = element_text(hjust = 1))+
theme_minimal()
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures", title = "Success") +
theme(title = element_text(hjust = 0.5))+
theme_minimal()
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures", title = "Success") +
theme(title = element_text(hjust = 1))+
theme_minimal()
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures") +
ggtitle("Success")+
theme(plot.title = element_text(hjust = 0.5))+
theme_minimal()
# Create the plot
geom_tile() +
# Create the plot
geom_tile() +
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
ggtitle("Success")+
theme_minimal()
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures") +
ggtitle("Success")+
theme(plot.title = element_text(hjust = 0.5))+
theme_minimal()
# Create the plot
ggplot(succ.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures") +
ggtitle("Success")+
theme(plot.title = element_text(hjust = 1.5))+
theme_minimal()
library(ggplot2)
library(viridis)
#Read in succ.matrix.csv
dat <- read.csv("part.matrix.csv")
#change column names to display correct functions
colnames(dat) <- c("first element","second element","1/2","2/1","1*2","1+2","1-2","2-1","total")
#combine columns 1 & 2
combined_column <- paste(dat$"first element", dat$"second element", sep = " & ")
# Name the combined column
dat$'Elemental.Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemntal architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
part.matrix <- dat[,1:7]
# Get row and column names
row_names <- rownames(part.matrix)
col_names <- colnames(part.matrix)
# Melt the table to long format
library(reshape2)
part.matrix.long <- melt(part.matrix)
# Create the plot
ggplot(part.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures") +
ggtitle("Partial Success")+
theme_minimal()
library(ggplot2)
library(viridis)
#Read in succ.matrix.csv
dat <- read.csv("fail.matrix.csv")
#change column names to display correct functions
colnames(dat) <- c("first element","second element","1/2","2/1","1*2","1+2","1-2","2-1","total")
#combine columns 1 & 2
combined_column <- paste(dat$"first element", dat$"second element", sep = " & ")
# Name the combined column
dat$'Elemental.Architectures' <- combined_column
#remove the 1st & 2nd column
dat <- dat[, -1]
dat <- dat[, -1]
#rearrange to make elemental architectures column 1
dat <- dat[, c(8, 1:7)]
#remove "total" column
fail.matrix <- dat[,1:7]
# Get row and column names
row_names <- rownames(fail.matrix)
col_names <- colnames(fail.matrix)
# Melt the table to long format
library(reshape2)
fail.matrix.long <- melt(fail.matrix)
# Create the plot
ggplot(fail.matrix.long, aes(variable, Elemental.Architectures, fill = value)) +
geom_tile() +
geom_text(aes(label = value), color = "white") + #added numbers to cells#
scale_fill_viridis(name = "Value", limits = c(0, 1)) +
labs(x = "Functions", y = "Elemental Architectures") +
ggtitle("Failure")+
theme_minimal()
